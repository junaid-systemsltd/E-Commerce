// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  name     String
  email    String  @unique
  password String
  isAdmin  Boolean @default(false)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  Review  Review?
  Product Product[]
  Order   Order[]
}

model Review {
  id      Int    @id @default(autoincrement())
  name    String
  rating  Float
  comment String

  user_id Int  @unique
  user    User @relation(fields: [user_id], references: [id])

  product_id Int
  product    Product @relation(fields: [product_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Product {
  id             Int    @id @default(autoincrement())
  name           String
  image          String
  brand          String
  category       String
  description    String
  rating         Float  @default(0)
  num_of_reviews Int    @default(0)
  price          Float  @default(0)
  count_in_stock Int    @default(0)

  reviews Review[]

  user_id Int
  user    User @relation(fields: [user_id], references: [id])

  orderItem_id Int?
  OrderItem    OrderItem? @relation(fields: [orderItem_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Order {
  id             Int   @id @default(autoincrement())
  tax_price      Float @default(0.0)
  shipping_price Float @default(0.0)
  total_price    Float @default(0.0)

  is_paid      Boolean @default(false)
  is_delivered Boolean @default(false)

  delivered_at DateTime?
  paid_at      DateTime?

  PaymentResults PaymentResults?
  order_items    OrderItem[]

  user_id Int
  user    User @relation(fields: [user_id], references: [id])

  shipping_address_id Int             @unique
  shipping_address    ShippingAddress @relation(fields: [shipping_address_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model OrderItem {
  id    Int    @id @default(autoincrement())
  name  String
  qty   Int
  image String
  price Float

  orderId Int?
  Order   Order? @relation(fields: [orderId], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]
}

model ShippingAddress {
  id          Int    @id @default(autoincrement())
  address     String
  city        String
  postal_code String
  country     String

  order Order?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PaymentResults {
  id            Int    @id @default(autoincrement())
  status        String
  update_time   String
  email_address String

  order_id Int   @unique
  order    Order @relation(fields: [order_id], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
